/* Custom Forms ---------------------- */

form.custom {

	span.custom {
		display: inline-block;
		width: 16px;
		height: 16px;
		position: relative;
		top: 2px;
		border: solid 1px $custFormBorderColor;
		background: $custFormBgColor;

		&.radio {
			@include border-radius(100px);
		}
		&.checkbox {
			&:before {
				content: '';
				display: block;
				line-height: 0.8;
				height: 14px;
				width: 14px;
				text-align: center;
				position: absolute;
				top: 0;
				#{$defaultDirection}: 0;
				font-size: 14px;
				color: #fff;
			}
		}
		&.radio.checked {
			&:before {
				content: '';
				display: block;
				width: 8px;
				height: 8px;
				@include border-radius(100px);
				background: $custCheckColor;
				position: relative;
				top: 3px;
				#{$defaultDirection}: 3px;
			}
		}
		&.checkbox.checked {
			&:before {
				content: '\00d7';
				color: $custCheckColor;
			}
		}
	}
	div.custom.dropdown {
		display: block;
		position: relative;
		width: auto;
		height: 28px;
		margin-bottom: 9px;
		margin-top: 2px;

		ul {
			overflow-y: auto;
			max-height: $custSelectDropHeight;
		}
		a.current {
			display: block;
			width: auto;
			line-height: 26px;
			min-height: 28px;
			padding: 0;
			padding-#{$defaultDirection}: 6px;
			padding-#{$defaultOpposite}: 38px;
			border: solid 1px $custSelectBorderColor;
			color: $custSelectCurrentFontColor;
			background-color: $custSelectBgColor;
			white-space: nowrap;
		}
		a.selector {
			position: absolute;
			width: 27px;
			height: 28px;
			display: block;
			#{$defaultOpposite}: 0;
			top: 0;
			border: solid 1px $custSelectBorderColor;
			&:after {
				content: '';
				display: block;
				@include cssTriangle(5px, $custSelectTriangleColor, top);
				position: absolute;
				#{$defaultDirection}: 50%;
				top: 50%;
				margin-top: -2px;
				margin-#{$defaultDirection}: -5px;
			}
		}
		&:hover, &.open {
			a.selector {
				&:after {
					@include cssTriangle(5px, $custSelectTriangleColorOpen, top);
				}
			}
		}

		&.open ul {
			display: block;
			z-index: 10;
		}

		&.small {
			width: 134px !important;
		}
		&.medium {
			width: 254px !important;
		}
		&.large {
			width: 434px !important;
		}
		&.expand {
			width: 100% !important;
		}

		&.open.small ul {
			width: 134px !important;
		}
		&.open.medium ul {
			width: 254px !important;
		}
		&.open.large ul {
			width: 434px !important;
		}
		&.open.expand ul {
			width: 100% !important;
		}
	}

	div.custom.dropdown ul {
		position: absolute;
		width: auto;
		display: none;
		margin: 0;
		#{$defaultDirection}: 0;
		top: 27px;
		margin: 0;
		padding: 0;
		background: $custDropdownBgColor;
		background: rgba($custDropdownBgColor, 0.95);
		border: solid 1px $custDropdownBorderColor;

		li {
			color: $custDropdownFontColor;
			font-size: ms(0) - 1;
			cursor: pointer;
			padding: 3px;
			padding-#{$defaultDirection}: 6px;
			padding-#{$defaultOpposite}: 38px;
			min-height: 18px;
			line-height: 18px;
			margin: 0;
			white-space: nowrap;
			list-style: none;
		}
		li.selected {
			background: $custDropdownSelectedBgColor;
			color: $custDropdownSelectedFontColor;
			&:after {
				content: '\2013';
				position: absolute;
				#{$defaultOpposite}: 10px;
			}
		}
		li:hover {
			background-color: $custDropdownSelectedBgColor;
			color: $custDropdownSelectedFontColor;
			&:after {
				content: '\2013';
				position: absolute;
				#{$defaultOpposite}: 10px;
				color: darken($custDropdownSelectedBgColor, 10%);
			}
		}
		li.selected:hover {
			background: $custDropdownSelectedBgColor;
			cursor: default;
			color: $custDropdownSelectedFontColor;
			&:after {
				color: $custDropdownSelectedFontColor;
			}
		}
		&.show {
			display: block;
		}
	}

	/* Custom input, disabled */
	.custom.disabled {
		background-color: $custFormDisabledBgColor;
	}
}

/* Correct FF custom dropdown height */
@-moz-document url-prefix() {
		form.custom div.custom.dropdown a.selector { height: 30px; }
	}
.lt-ie9 form.custom div.custom.dropdown a.selector {
	height: 30px;
}

/* Buttons with Dropdowns ---------------------- */

.button.dropdown {
	position: relative;

	/* Triangles */
	&:after {
		font-family: $iconFontFamily;
		content: '\25be';
		display: inline-block;
		font-size: 1em;
	}

	/* Flyout List */
	& > ul {
		@include box-sizing(content-box);
		display: none;
		position: absolute;
		#{$defaultDirection}: -1px;
		background: #fff;
		background: rgba(#fff, 0.95);
		list-style: none;
		margin: 0;
		padding: 0;
		border: 1px solid darken($white, 20%);
		border-top: none;
		min-width: 100%;
		z-index: 40;

		li {
			width: 100%;
			cursor: pointer;
			padding: 0;
			min-height: 18px;
			line-height: 18px;
			margin: 0;
			white-space: nowrap;
			list-style: none;

			a {
				display: block;
				color: #555;
				font-size: ms(0) - 1;
				font-weight: $bodyFontWeight;
				padding: 6px 14px;
				text-align: $defaultDirection;
			}
			&:hover, &:focus {
				background-color: lighten($lightColor, 45%);
				color: #222;
			}
			&.divider {
				min-height: 0;
				padding: 0;
				height: 1px;
				margin: 4px 0;
				background: darken($white, 7%);
			}
		}
	}

	&.up > ul {
		border-top: 1px solid darken($white, 20%);
		border-bottom: none;
	}

	ul.no-hover.show-dropdown {
		display: block !important;
	}
	&:hover {
		&>ul.no-hover {
			display: none;
		}
	}

	/* Split Dropdown Buttons */
	&.split {
		padding: 0;
		position: relative;

		&:after {
			display: none;
		}

		/* Sizes */
		& > a {
			color: darken(($secondaryColor), 80%);
			display: block;
			padding: $btnBase (($btnBase * 2.5) * 2) ($btnBase + 1) ($btnBase * 2);
			padding-#{$defaultDirection}: $btnBase * 2;
			padding-#{$defaultOpposite}: ($btnBase * 2.5) * 2;
			@include box-shadow(0 1px 0 $shinyEdge inset);
			@include single-transition(background-color, .15s, ease-in-out);

			&:hover, &:focus {
				color: darken(($secondaryColor), 80%);
				background-color: darken($lightColor, 10%);
			}
		}
		&.large > a {
			padding: $largeBtnBase (($largeBtnBase * 2.5) * 2) ($largeBtnBase + 1) ($largeBtnBase * 2);
			padding-#{$defaultDirection}: $largeBtnBase * 2;
			padding-#{$defaultOpposite}: ($largeBtnBase * 2.5) * 2;
		}
		&.small > a {
			padding: $smallBtnBase (($smallBtnBase * 2.5) * 2) ($smallBtnBase + 1) ($smallBtnBase * 2);
			padding-#{$defaultDirection}: $smallBtnBase * 2;
			padding-#{$defaultOpposite}: ($smallBtnBase * 2.5) * 2;
		}
		&.tiny > a {
			padding: $tinyBtnBase (($tinyBtnBase * 2.5) * 2) ($tinyBtnBase + 1) ($tinyBtnBase * 2);
			padding-#{$defaultDirection}: $tinyBtnBase * 2;
			padding-#{$defaultOpposite}: ($tinyBtnBase * 2.5) * 2;
		}

		/* Triangle Spans */
		& > span {
			font-family: $iconFontFamily;
			background-color: $mainColor;
			position: absolute;
			#{$defaultOpposite}: 0;
			top: 0;
			height: 100%;
			width: $btnBase * 3;
			border-#{$defaultDirection}: 1px solid darken($lightColor, 15%);
			@include box-shadow(1px 1px 0 $shinyEdge inset);
			@include single-transition(background-color, .15s, ease-in-out);

			&:hover, &:focus {
				background-color: darken($lightColor, 10%);
			}
			&:after {
				content: '\25be';
				margin: 40% 0 0;
				display: inline-block;
			}
		}
		&.secondary > span:after {
			content: '';
			display: inline-block;
		}

		&.large span {
			width: $largeBtnBase * 3;
		}
		&.small span {
			width: $smallBtnBase * 3;
		}
		&.tiny span {
			width: $tinyBtnBase * 3;
		}

		&.large span:after {
			content: '\25be';
			display: inline-block;
		}
		&.small span:after {
			content: '\25be';
			display: inline-block;
		}
		&.tiny span:after {
			content: '\25be';
			display: inline-block;
		}
	}
}